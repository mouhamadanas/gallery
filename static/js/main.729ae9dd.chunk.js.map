{"version":3,"sources":["components/Heder.js","App.js","reportWebVitals.js","index.js"],"names":["photos","isfet","error","num","Heder","useState","serch","setSearch","photo","setPhoto","type","setType","useEffect","axios","get","then","res","data","filter","e","albumId","catch","err","value","onChange","target","placeholder","onClick","className","map","ph","src","url","alt","title","document","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gNAGIA,EAAS,GAAIC,GAAQ,EAAOC,GAAQ,EAAOC,EAAM,GAuDtCC,EArDD,WACV,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,OAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,qBAAU,WAENX,GAAQ,EACRC,GAAQ,EACRW,IACKC,IAAI,+CACJC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,MAAK,SAAAC,GAEFhB,GADAA,EAASgB,GACOE,QAAO,SAACC,GAAQ,OAAQA,EAAEC,UAAYjB,KACtDF,GAAQ,EACRQ,EAAST,MACVqB,OAAM,SAAAC,GAASpB,GAAQ,OAC/B,CAACQ,IAKA,gCACI,mCACI,+CACA,gCACI,uBAAOa,MAAOjB,EAAOkB,SAAU,SAACL,GAAD,OAAOZ,EAAUY,EAAEM,OAAOF,QAAQG,YAAY,WAC5EpB,GAAS,wBAAQqB,QAAS,kBAAMhB,EAAQL,IAA/B,0BAGlB,sBAAKsB,UAAU,OAAf,UACI,wBAAQD,QAAS,WAAQhB,EAAQ,SAAUR,EAAM,GAAjD,mBACA,wBAAQwB,QAAS,WAAQhB,EAAQ,YAAaR,EAAM,GAApD,sBACA,wBAAQwB,QAAS,WAAQhB,EAAQ,UAAWR,EAAM,GAAlD,qBACA,wBAAQwB,QAAS,WAAQhB,EAAQ,QAASR,EAAM,GAAhD,kBACA,wBAAQwB,QAAS,WAAQhB,EAAQ,QAASR,EAAM,IAAhD,sBAEFD,GAASD,GAAS,+BAAKS,EAAL,eAGlBR,IAAUD,GAAS,oBAAI2B,UAAU,UAAd,wBAGpB1B,GAAS,+DACV,qBAAK0B,UAAU,UAAf,SACKpB,EAAMqB,KAAI,SAAAC,GAAQ,OAAQ,qBAAKC,IAAKD,EAAGE,IAAKC,IAAKH,EAAGI,iBC9CrEC,SAASD,MAAQ,eAUFE,MATf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCGSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFZ,SAASa,eAAe,SAM1BX,K","file":"static/js/main.729ae9dd.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport '../App.css'\r\nlet photos = [], isfet = false, error = false, num = 10\r\n\r\nconst Heder = () => {\r\n    const [serch, setSearch] = useState(\"\")\r\n    const [photo, setPhoto] = useState([])\r\n    const [type, setType] = useState('any')\r\n\r\n    useEffect(() => {\r\n\r\n        isfet = false\r\n        error = false\r\n        axios\r\n            .get(\"https://jsonplaceholder.typicode.com/photos\")\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                photos = res\r\n                photos = photos.filter((e) => { return (e.albumId === num) })\r\n                isfet = true\r\n                setPhoto(photos)\r\n            }).catch(err => { error = true })\r\n    }, [type])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h1> cute gallery</h1>\r\n                <div>\r\n                    <input value={serch} onChange={(e) => setSearch(e.target.value)} placeholder=\"search\" />\r\n                    {serch && <button onClick={() => setType(serch)}>search</button>}\r\n                </div>\r\n            </header>\r\n            <div className=\"btns\">\r\n                <button onClick={() => { setType(\"birds\"); num = 1 }}>birds</button>\r\n                <button onClick={() => { setType(\"mountain\"); num = 2 }}>mountain</button>\r\n                <button onClick={() => { setType(\"babies\"); num = 3 }}> babies</button>\r\n                <button onClick={() => { setType(\"seas\"); num = 4 }}>seas</button>\r\n                <button onClick={() => { setType(\"else\"); num = 45 }}>else</button>\r\n            </div>\r\n            {!error && isfet && <h1>{type} photoes</h1>}\r\n\r\n\r\n            {!error && !isfet && <h1 className=\"loading\">loading...</h1>}\r\n\r\n\r\n            {error && <h1> there is an error, try again</h1>}\r\n            <div className=\"photoes\">\r\n                {photo.map(ph => { return (<img src={ph.url} alt={ph.title} />) })}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Heder\r\n","\nimport './App.css';\nimport Heder from './components/Heder';\n\n\ndocument.title = \"cute gallery\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Heder />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}